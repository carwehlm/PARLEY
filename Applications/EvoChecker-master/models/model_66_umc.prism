dtmc
const int N=9;
const int xstart = 0;
const int ystart = 0;
const int xtarget = 9;
const int ytarget = 9;
const double p = 0.01;
 
formula hasCrashed = (1=0) | (x=1 & y=4) | (x=2 & y=2) | (x=2 & y=4) | (x=2 & y=5) | (x=2 & y=6) | (x=3 & y=1) | (x=3 & y=2) | (x=3 & y=8) | (x=4 & y=3) | (x=5 & y=5) | (x=6 & y=3) | (x=6 & y=5) | (x=7 & y=1) | (x=7 & y=2) | (x=7 & y=6) | (x=8 & y=2) | (x=8 & y=4) | (x=8 & y=5) ;

module Robot 
  x : [0..N] init xstart;
  y : [0..N] init ystart;
  ready : [0..1] init 1;
  crashed : [0..1] init 0;

  [east] (ready=1) -> 
    (1-3*p): (x'=min(x+1, N)) & (ready'=0) + 
    p: (y'=min(y+1, N)) & (ready'=0) + 
    p: (y'=max(y-1, 0)) & (ready'=0) + 
    p: (x'=max(x-1, 0)) & (ready'=0); 
  [west] (ready=1) -> 
    p: (x'=min(x+1, N)) & (ready'=0) + 
    p: (y'=min(y+1, N)) & (ready'=0) + 
    p: (y'=max(y-1, 0)) & (ready'=0) + 
    (1-3*p): (x'=max(x-1, 0)) & (ready'=0); 
  [north] (ready=1) -> 
    p: (x'=min(x+1, N)) & (ready'=0) + 
    (1-3*p): (y'=min(y+1, N)) & (ready'=0) + 
    p: (y'=max(y-1, 0)) & (ready'=0) + 
    p: (x'=max(x-1, 0)) & (ready'=0); 
  [south] (ready=1) -> 
    p: (x'=min(x+1, N)) & (ready'=0) + 
    p: (y'=min(y+1, N)) & (ready'=0) + 
    (1-3*p): (y'=max(y-1, 0)) & (ready'=0) + 
    p: (x'=max(x-1, 0)) & (ready'=0); 

  [check] (ready=0) & hasCrashed -> (crashed'=1) & (ready'=1); 
  [check] (ready=0) & !hasCrashed -> (crashed'=0) & (ready'=1); 
  [stucked] (crashed=1) -> true;
endmodule

module Adaptation_MAPE_controller
  [north] (xhat=0) & (yhat=0) & (crashed=0) -> true;
  [north] (xhat=0) & (yhat=1) & (crashed=0) -> true;
  [north] (xhat=0) & (yhat=2) & (crashed=0) -> true;
  [north] (xhat=0) & (yhat=3) & (crashed=0) -> true;
  [north] (xhat=0) & (yhat=4) & (crashed=0) -> true;
  [north] (xhat=0) & (yhat=5) & (crashed=0) -> true;
  [north] (xhat=0) & (yhat=6) & (crashed=0) -> true;
  [north] (xhat=0) & (yhat=7) & (crashed=0) -> true;
  [north] (xhat=0) & (yhat=8) & (crashed=0) -> true;
  [east] (xhat=0) & (yhat=9) & (crashed=0) -> true;
  [west] (xhat=1) & (yhat=0) & (crashed=0) -> true;
  [west] (xhat=1) & (yhat=1) & (crashed=0) -> true;
  [west] (xhat=1) & (yhat=2) & (crashed=0) -> true;
  [west] (xhat=1) & (yhat=3) & (crashed=0) -> true;
  [west] (xhat=1) & (yhat=5) & (crashed=0) -> true;
  [west] (xhat=1) & (yhat=6) & (crashed=0) -> true;
  [west] (xhat=1) & (yhat=7) & (crashed=0) -> true;
  [north] (xhat=1) & (yhat=8) & (crashed=0) -> true;
  [east] (xhat=1) & (yhat=9) & (crashed=0) -> true;
  [west] (xhat=2) & (yhat=0) & (crashed=0) -> true;
  [west] (xhat=2) & (yhat=1) & (crashed=0) -> true;
  [west] (xhat=2) & (yhat=3) & (crashed=0) -> true;
  [east] (xhat=2) & (yhat=7) & (crashed=0) -> true;
  [north] (xhat=2) & (yhat=8) & (crashed=0) -> true;
  [east] (xhat=2) & (yhat=9) & (crashed=0) -> true;
  [west] (xhat=3) & (yhat=0) & (crashed=0) -> true;
  [north] (xhat=3) & (yhat=3) & (crashed=0) -> true;
  [north] (xhat=3) & (yhat=4) & (crashed=0) -> true;
  [north] (xhat=3) & (yhat=5) & (crashed=0) -> true;
  [east] (xhat=3) & (yhat=6) & (crashed=0) -> true;
  [east] (xhat=3) & (yhat=7) & (crashed=0) -> true;
  [east] (xhat=3) & (yhat=9) & (crashed=0) -> true;
  [west] (xhat=4) & (yhat=0) & (crashed=0) -> true;
  [south] (xhat=4) & (yhat=1) & (crashed=0) -> true;
  [east] (xhat=4) & (yhat=2) & (crashed=0) -> true;
  [north] (xhat=4) & (yhat=4) & (crashed=0) -> true;
  [north] (xhat=4) & (yhat=5) & (crashed=0) -> true;
  [north] (xhat=4) & (yhat=6) & (crashed=0) -> true;
  [east] (xhat=4) & (yhat=7) & (crashed=0) -> true;
  [north] (xhat=4) & (yhat=8) & (crashed=0) -> true;
  [east] (xhat=4) & (yhat=9) & (crashed=0) -> true;
  [west] (xhat=5) & (yhat=0) & (crashed=0) -> true;
  [south] (xhat=5) & (yhat=1) & (crashed=0) -> true;
  [south] (xhat=5) & (yhat=2) & (crashed=0) -> true;
  [south] (xhat=5) & (yhat=3) & (crashed=0) -> true;
  [west] (xhat=5) & (yhat=4) & (crashed=0) -> true;
  [north] (xhat=5) & (yhat=6) & (crashed=0) -> true;
  [north] (xhat=5) & (yhat=7) & (crashed=0) -> true;
  [north] (xhat=5) & (yhat=8) & (crashed=0) -> true;
  [east] (xhat=5) & (yhat=9) & (crashed=0) -> true;
  [west] (xhat=6) & (yhat=0) & (crashed=0) -> true;
  [west] (xhat=6) & (yhat=1) & (crashed=0) -> true;
  [west] (xhat=6) & (yhat=2) & (crashed=0) -> true;
  [west] (xhat=6) & (yhat=4) & (crashed=0) -> true;
  [north] (xhat=6) & (yhat=6) & (crashed=0) -> true;
  [west] (xhat=6) & (yhat=7) & (crashed=0) -> true;
  [north] (xhat=6) & (yhat=8) & (crashed=0) -> true;
  [east] (xhat=6) & (yhat=9) & (crashed=0) -> true;
  [west] (xhat=7) & (yhat=0) & (crashed=0) -> true;
  [east] (xhat=7) & (yhat=3) & (crashed=0) -> true;
  [west] (xhat=7) & (yhat=4) & (crashed=0) -> true;
  [south] (xhat=7) & (yhat=5) & (crashed=0) -> true;
  [west] (xhat=7) & (yhat=7) & (crashed=0) -> true;
  [north] (xhat=7) & (yhat=8) & (crashed=0) -> true;
  [east] (xhat=7) & (yhat=9) & (crashed=0) -> true;
  [east] (xhat=8) & (yhat=0) & (crashed=0) -> true;
  [east] (xhat=8) & (yhat=1) & (crashed=0) -> true;
  [east] (xhat=8) & (yhat=3) & (crashed=0) -> true;
  [north] (xhat=8) & (yhat=6) & (crashed=0) -> true;
  [north] (xhat=8) & (yhat=7) & (crashed=0) -> true;
  [north] (xhat=8) & (yhat=8) & (crashed=0) -> true;
  [east] (xhat=8) & (yhat=9) & (crashed=0) -> true;
  [north] (xhat=9) & (yhat=0) & (crashed=0) -> true;
  [north] (xhat=9) & (yhat=1) & (crashed=0) -> true;
  [north] (xhat=9) & (yhat=2) & (crashed=0) -> true;
  [north] (xhat=9) & (yhat=3) & (crashed=0) -> true;
  [north] (xhat=9) & (yhat=4) & (crashed=0) -> true;
  [north] (xhat=9) & (yhat=5) & (crashed=0) -> true;
  [north] (xhat=9) & (yhat=6) & (crashed=0) -> true;
  [west] (xhat=9) & (yhat=7) & (crashed=0) -> true;
  [north] (xhat=9) & (yhat=8) & (crashed=0) -> true;
endmodule

module Knowledge
  xhat : [0..N] init xstart;
  yhat : [0..N] init ystart;

  [west] true -> (xhat'=max(xhat-1, 0));
  [east] true -> (xhat'=min(xhat+1, N));
  [south] true -> (yhat'=max(yhat-1, 0));
  [north] true -> (yhat'=min(yhat+1, N));
  [update_1] true -> (xhat'=x) & (yhat'=y);
endmodule

evolve int decision_0_0 [0..10];
evolve int decision_0_1 [0..10];
evolve int decision_0_2 [0..10];
evolve int decision_0_3 [0..10];
evolve int decision_0_4 [0..10];
evolve int decision_0_5 [0..10];
evolve int decision_0_6 [0..10];
evolve int decision_0_7 [0..10];
evolve int decision_0_8 [0..10];
evolve int decision_0_9 [0..10];
evolve int decision_1_0 [0..10];
evolve int decision_1_1 [0..10];
evolve int decision_1_2 [0..10];
evolve int decision_1_3 [0..10];
evolve int decision_1_4 [0..10];
evolve int decision_1_5 [0..10];
evolve int decision_1_6 [0..10];
evolve int decision_1_7 [0..10];
evolve int decision_1_8 [0..10];
evolve int decision_1_9 [0..10];
evolve int decision_2_0 [0..10];
evolve int decision_2_1 [0..10];
evolve int decision_2_2 [0..10];
evolve int decision_2_3 [0..10];
evolve int decision_2_4 [0..10];
evolve int decision_2_5 [0..10];
evolve int decision_2_6 [0..10];
evolve int decision_2_7 [0..10];
evolve int decision_2_8 [0..10];
evolve int decision_2_9 [0..10];
evolve int decision_3_0 [0..10];
evolve int decision_3_1 [0..10];
evolve int decision_3_2 [0..10];
evolve int decision_3_3 [0..10];
evolve int decision_3_4 [0..10];
evolve int decision_3_5 [0..10];
evolve int decision_3_6 [0..10];
evolve int decision_3_7 [0..10];
evolve int decision_3_8 [0..10];
evolve int decision_3_9 [0..10];
evolve int decision_4_0 [0..10];
evolve int decision_4_1 [0..10];
evolve int decision_4_2 [0..10];
evolve int decision_4_3 [0..10];
evolve int decision_4_4 [0..10];
evolve int decision_4_5 [0..10];
evolve int decision_4_6 [0..10];
evolve int decision_4_7 [0..10];
evolve int decision_4_8 [0..10];
evolve int decision_4_9 [0..10];
evolve int decision_5_0 [0..10];
evolve int decision_5_1 [0..10];
evolve int decision_5_2 [0..10];
evolve int decision_5_3 [0..10];
evolve int decision_5_4 [0..10];
evolve int decision_5_5 [0..10];
evolve int decision_5_6 [0..10];
evolve int decision_5_7 [0..10];
evolve int decision_5_8 [0..10];
evolve int decision_5_9 [0..10];
evolve int decision_6_0 [0..10];
evolve int decision_6_1 [0..10];
evolve int decision_6_2 [0..10];
evolve int decision_6_3 [0..10];
evolve int decision_6_4 [0..10];
evolve int decision_6_5 [0..10];
evolve int decision_6_6 [0..10];
evolve int decision_6_7 [0..10];
evolve int decision_6_8 [0..10];
evolve int decision_6_9 [0..10];
evolve int decision_7_0 [0..10];
evolve int decision_7_1 [0..10];
evolve int decision_7_2 [0..10];
evolve int decision_7_3 [0..10];
evolve int decision_7_4 [0..10];
evolve int decision_7_5 [0..10];
evolve int decision_7_6 [0..10];
evolve int decision_7_7 [0..10];
evolve int decision_7_8 [0..10];
evolve int decision_7_9 [0..10];
evolve int decision_8_0 [0..10];
evolve int decision_8_1 [0..10];
evolve int decision_8_2 [0..10];
evolve int decision_8_3 [0..10];
evolve int decision_8_4 [0..10];
evolve int decision_8_5 [0..10];
evolve int decision_8_6 [0..10];
evolve int decision_8_7 [0..10];
evolve int decision_8_8 [0..10];
evolve int decision_8_9 [0..10];
evolve int decision_9_0 [0..10];
evolve int decision_9_1 [0..10];
evolve int decision_9_2 [0..10];
evolve int decision_9_3 [0..10];
evolve int decision_9_4 [0..10];
evolve int decision_9_5 [0..10];
evolve int decision_9_6 [0..10];
evolve int decision_9_7 [0..10];
evolve int decision_9_8 [0..10];
evolve int decision_9_9 [0..10];
const int maxStep = 10;
module UMC_MAPE_controller
 step : [1..maxStep] init 1;
  [skip_update] (xhat=0) & (yhat=0) & (step<decision_0_0) -> (step'=step+1);
  [update_1] (xhat=0) & (yhat=0) & (step>=decision_0_0) -> (step'=1);
  [skip_update] (xhat=0) & (yhat=1) & (step<decision_0_1) -> (step'=step+1);
  [update_1] (xhat=0) & (yhat=1) & (step>=decision_0_1) -> (step'=1);
  [skip_update] (xhat=0) & (yhat=2) & (step<decision_0_2) -> (step'=step+1);
  [update_1] (xhat=0) & (yhat=2) & (step>=decision_0_2) -> (step'=1);
  [skip_update] (xhat=0) & (yhat=3) & (step<decision_0_3) -> (step'=step+1);
  [update_1] (xhat=0) & (yhat=3) & (step>=decision_0_3) -> (step'=1);
  [skip_update] (xhat=0) & (yhat=4) & (step<decision_0_4) -> (step'=step+1);
  [update_1] (xhat=0) & (yhat=4) & (step>=decision_0_4) -> (step'=1);
  [skip_update] (xhat=0) & (yhat=5) & (step<decision_0_5) -> (step'=step+1);
  [update_1] (xhat=0) & (yhat=5) & (step>=decision_0_5) -> (step'=1);
  [skip_update] (xhat=0) & (yhat=6) & (step<decision_0_6) -> (step'=step+1);
  [update_1] (xhat=0) & (yhat=6) & (step>=decision_0_6) -> (step'=1);
  [skip_update] (xhat=0) & (yhat=7) & (step<decision_0_7) -> (step'=step+1);
  [update_1] (xhat=0) & (yhat=7) & (step>=decision_0_7) -> (step'=1);
  [skip_update] (xhat=0) & (yhat=8) & (step<decision_0_8) -> (step'=step+1);
  [update_1] (xhat=0) & (yhat=8) & (step>=decision_0_8) -> (step'=1);
  [skip_update] (xhat=0) & (yhat=9) & (step<decision_0_9) -> (step'=step+1);
  [update_1] (xhat=0) & (yhat=9) & (step>=decision_0_9) -> (step'=1);
  [skip_update] (xhat=1) & (yhat=0) & (step<decision_1_0) -> (step'=step+1);
  [update_1] (xhat=1) & (yhat=0) & (step>=decision_1_0) -> (step'=1);
  [skip_update] (xhat=1) & (yhat=1) & (step<decision_1_1) -> (step'=step+1);
  [update_1] (xhat=1) & (yhat=1) & (step>=decision_1_1) -> (step'=1);
  [skip_update] (xhat=1) & (yhat=2) & (step<decision_1_2) -> (step'=step+1);
  [update_1] (xhat=1) & (yhat=2) & (step>=decision_1_2) -> (step'=1);
  [skip_update] (xhat=1) & (yhat=3) & (step<decision_1_3) -> (step'=step+1);
  [update_1] (xhat=1) & (yhat=3) & (step>=decision_1_3) -> (step'=1);
  [skip_update] (xhat=1) & (yhat=4) & (step<decision_1_4) -> (step'=step+1);
  [update_1] (xhat=1) & (yhat=4) & (step>=decision_1_4) -> (step'=1);
  [skip_update] (xhat=1) & (yhat=5) & (step<decision_1_5) -> (step'=step+1);
  [update_1] (xhat=1) & (yhat=5) & (step>=decision_1_5) -> (step'=1);
  [skip_update] (xhat=1) & (yhat=6) & (step<decision_1_6) -> (step'=step+1);
  [update_1] (xhat=1) & (yhat=6) & (step>=decision_1_6) -> (step'=1);
  [skip_update] (xhat=1) & (yhat=7) & (step<decision_1_7) -> (step'=step+1);
  [update_1] (xhat=1) & (yhat=7) & (step>=decision_1_7) -> (step'=1);
  [skip_update] (xhat=1) & (yhat=8) & (step<decision_1_8) -> (step'=step+1);
  [update_1] (xhat=1) & (yhat=8) & (step>=decision_1_8) -> (step'=1);
  [skip_update] (xhat=1) & (yhat=9) & (step<decision_1_9) -> (step'=step+1);
  [update_1] (xhat=1) & (yhat=9) & (step>=decision_1_9) -> (step'=1);
  [skip_update] (xhat=2) & (yhat=0) & (step<decision_2_0) -> (step'=step+1);
  [update_1] (xhat=2) & (yhat=0) & (step>=decision_2_0) -> (step'=1);
  [skip_update] (xhat=2) & (yhat=1) & (step<decision_2_1) -> (step'=step+1);
  [update_1] (xhat=2) & (yhat=1) & (step>=decision_2_1) -> (step'=1);
  [skip_update] (xhat=2) & (yhat=2) & (step<decision_2_2) -> (step'=step+1);
  [update_1] (xhat=2) & (yhat=2) & (step>=decision_2_2) -> (step'=1);
  [skip_update] (xhat=2) & (yhat=3) & (step<decision_2_3) -> (step'=step+1);
  [update_1] (xhat=2) & (yhat=3) & (step>=decision_2_3) -> (step'=1);
  [skip_update] (xhat=2) & (yhat=4) & (step<decision_2_4) -> (step'=step+1);
  [update_1] (xhat=2) & (yhat=4) & (step>=decision_2_4) -> (step'=1);
  [skip_update] (xhat=2) & (yhat=5) & (step<decision_2_5) -> (step'=step+1);
  [update_1] (xhat=2) & (yhat=5) & (step>=decision_2_5) -> (step'=1);
  [skip_update] (xhat=2) & (yhat=6) & (step<decision_2_6) -> (step'=step+1);
  [update_1] (xhat=2) & (yhat=6) & (step>=decision_2_6) -> (step'=1);
  [skip_update] (xhat=2) & (yhat=7) & (step<decision_2_7) -> (step'=step+1);
  [update_1] (xhat=2) & (yhat=7) & (step>=decision_2_7) -> (step'=1);
  [skip_update] (xhat=2) & (yhat=8) & (step<decision_2_8) -> (step'=step+1);
  [update_1] (xhat=2) & (yhat=8) & (step>=decision_2_8) -> (step'=1);
  [skip_update] (xhat=2) & (yhat=9) & (step<decision_2_9) -> (step'=step+1);
  [update_1] (xhat=2) & (yhat=9) & (step>=decision_2_9) -> (step'=1);
  [skip_update] (xhat=3) & (yhat=0) & (step<decision_3_0) -> (step'=step+1);
  [update_1] (xhat=3) & (yhat=0) & (step>=decision_3_0) -> (step'=1);
  [skip_update] (xhat=3) & (yhat=1) & (step<decision_3_1) -> (step'=step+1);
  [update_1] (xhat=3) & (yhat=1) & (step>=decision_3_1) -> (step'=1);
  [skip_update] (xhat=3) & (yhat=2) & (step<decision_3_2) -> (step'=step+1);
  [update_1] (xhat=3) & (yhat=2) & (step>=decision_3_2) -> (step'=1);
  [skip_update] (xhat=3) & (yhat=3) & (step<decision_3_3) -> (step'=step+1);
  [update_1] (xhat=3) & (yhat=3) & (step>=decision_3_3) -> (step'=1);
  [skip_update] (xhat=3) & (yhat=4) & (step<decision_3_4) -> (step'=step+1);
  [update_1] (xhat=3) & (yhat=4) & (step>=decision_3_4) -> (step'=1);
  [skip_update] (xhat=3) & (yhat=5) & (step<decision_3_5) -> (step'=step+1);
  [update_1] (xhat=3) & (yhat=5) & (step>=decision_3_5) -> (step'=1);
  [skip_update] (xhat=3) & (yhat=6) & (step<decision_3_6) -> (step'=step+1);
  [update_1] (xhat=3) & (yhat=6) & (step>=decision_3_6) -> (step'=1);
  [skip_update] (xhat=3) & (yhat=7) & (step<decision_3_7) -> (step'=step+1);
  [update_1] (xhat=3) & (yhat=7) & (step>=decision_3_7) -> (step'=1);
  [skip_update] (xhat=3) & (yhat=8) & (step<decision_3_8) -> (step'=step+1);
  [update_1] (xhat=3) & (yhat=8) & (step>=decision_3_8) -> (step'=1);
  [skip_update] (xhat=3) & (yhat=9) & (step<decision_3_9) -> (step'=step+1);
  [update_1] (xhat=3) & (yhat=9) & (step>=decision_3_9) -> (step'=1);
  [skip_update] (xhat=4) & (yhat=0) & (step<decision_4_0) -> (step'=step+1);
  [update_1] (xhat=4) & (yhat=0) & (step>=decision_4_0) -> (step'=1);
  [skip_update] (xhat=4) & (yhat=1) & (step<decision_4_1) -> (step'=step+1);
  [update_1] (xhat=4) & (yhat=1) & (step>=decision_4_1) -> (step'=1);
  [skip_update] (xhat=4) & (yhat=2) & (step<decision_4_2) -> (step'=step+1);
  [update_1] (xhat=4) & (yhat=2) & (step>=decision_4_2) -> (step'=1);
  [skip_update] (xhat=4) & (yhat=3) & (step<decision_4_3) -> (step'=step+1);
  [update_1] (xhat=4) & (yhat=3) & (step>=decision_4_3) -> (step'=1);
  [skip_update] (xhat=4) & (yhat=4) & (step<decision_4_4) -> (step'=step+1);
  [update_1] (xhat=4) & (yhat=4) & (step>=decision_4_4) -> (step'=1);
  [skip_update] (xhat=4) & (yhat=5) & (step<decision_4_5) -> (step'=step+1);
  [update_1] (xhat=4) & (yhat=5) & (step>=decision_4_5) -> (step'=1);
  [skip_update] (xhat=4) & (yhat=6) & (step<decision_4_6) -> (step'=step+1);
  [update_1] (xhat=4) & (yhat=6) & (step>=decision_4_6) -> (step'=1);
  [skip_update] (xhat=4) & (yhat=7) & (step<decision_4_7) -> (step'=step+1);
  [update_1] (xhat=4) & (yhat=7) & (step>=decision_4_7) -> (step'=1);
  [skip_update] (xhat=4) & (yhat=8) & (step<decision_4_8) -> (step'=step+1);
  [update_1] (xhat=4) & (yhat=8) & (step>=decision_4_8) -> (step'=1);
  [skip_update] (xhat=4) & (yhat=9) & (step<decision_4_9) -> (step'=step+1);
  [update_1] (xhat=4) & (yhat=9) & (step>=decision_4_9) -> (step'=1);
  [skip_update] (xhat=5) & (yhat=0) & (step<decision_5_0) -> (step'=step+1);
  [update_1] (xhat=5) & (yhat=0) & (step>=decision_5_0) -> (step'=1);
  [skip_update] (xhat=5) & (yhat=1) & (step<decision_5_1) -> (step'=step+1);
  [update_1] (xhat=5) & (yhat=1) & (step>=decision_5_1) -> (step'=1);
  [skip_update] (xhat=5) & (yhat=2) & (step<decision_5_2) -> (step'=step+1);
  [update_1] (xhat=5) & (yhat=2) & (step>=decision_5_2) -> (step'=1);
  [skip_update] (xhat=5) & (yhat=3) & (step<decision_5_3) -> (step'=step+1);
  [update_1] (xhat=5) & (yhat=3) & (step>=decision_5_3) -> (step'=1);
  [skip_update] (xhat=5) & (yhat=4) & (step<decision_5_4) -> (step'=step+1);
  [update_1] (xhat=5) & (yhat=4) & (step>=decision_5_4) -> (step'=1);
  [skip_update] (xhat=5) & (yhat=5) & (step<decision_5_5) -> (step'=step+1);
  [update_1] (xhat=5) & (yhat=5) & (step>=decision_5_5) -> (step'=1);
  [skip_update] (xhat=5) & (yhat=6) & (step<decision_5_6) -> (step'=step+1);
  [update_1] (xhat=5) & (yhat=6) & (step>=decision_5_6) -> (step'=1);
  [skip_update] (xhat=5) & (yhat=7) & (step<decision_5_7) -> (step'=step+1);
  [update_1] (xhat=5) & (yhat=7) & (step>=decision_5_7) -> (step'=1);
  [skip_update] (xhat=5) & (yhat=8) & (step<decision_5_8) -> (step'=step+1);
  [update_1] (xhat=5) & (yhat=8) & (step>=decision_5_8) -> (step'=1);
  [skip_update] (xhat=5) & (yhat=9) & (step<decision_5_9) -> (step'=step+1);
  [update_1] (xhat=5) & (yhat=9) & (step>=decision_5_9) -> (step'=1);
  [skip_update] (xhat=6) & (yhat=0) & (step<decision_6_0) -> (step'=step+1);
  [update_1] (xhat=6) & (yhat=0) & (step>=decision_6_0) -> (step'=1);
  [skip_update] (xhat=6) & (yhat=1) & (step<decision_6_1) -> (step'=step+1);
  [update_1] (xhat=6) & (yhat=1) & (step>=decision_6_1) -> (step'=1);
  [skip_update] (xhat=6) & (yhat=2) & (step<decision_6_2) -> (step'=step+1);
  [update_1] (xhat=6) & (yhat=2) & (step>=decision_6_2) -> (step'=1);
  [skip_update] (xhat=6) & (yhat=3) & (step<decision_6_3) -> (step'=step+1);
  [update_1] (xhat=6) & (yhat=3) & (step>=decision_6_3) -> (step'=1);
  [skip_update] (xhat=6) & (yhat=4) & (step<decision_6_4) -> (step'=step+1);
  [update_1] (xhat=6) & (yhat=4) & (step>=decision_6_4) -> (step'=1);
  [skip_update] (xhat=6) & (yhat=5) & (step<decision_6_5) -> (step'=step+1);
  [update_1] (xhat=6) & (yhat=5) & (step>=decision_6_5) -> (step'=1);
  [skip_update] (xhat=6) & (yhat=6) & (step<decision_6_6) -> (step'=step+1);
  [update_1] (xhat=6) & (yhat=6) & (step>=decision_6_6) -> (step'=1);
  [skip_update] (xhat=6) & (yhat=7) & (step<decision_6_7) -> (step'=step+1);
  [update_1] (xhat=6) & (yhat=7) & (step>=decision_6_7) -> (step'=1);
  [skip_update] (xhat=6) & (yhat=8) & (step<decision_6_8) -> (step'=step+1);
  [update_1] (xhat=6) & (yhat=8) & (step>=decision_6_8) -> (step'=1);
  [skip_update] (xhat=6) & (yhat=9) & (step<decision_6_9) -> (step'=step+1);
  [update_1] (xhat=6) & (yhat=9) & (step>=decision_6_9) -> (step'=1);
  [skip_update] (xhat=7) & (yhat=0) & (step<decision_7_0) -> (step'=step+1);
  [update_1] (xhat=7) & (yhat=0) & (step>=decision_7_0) -> (step'=1);
  [skip_update] (xhat=7) & (yhat=1) & (step<decision_7_1) -> (step'=step+1);
  [update_1] (xhat=7) & (yhat=1) & (step>=decision_7_1) -> (step'=1);
  [skip_update] (xhat=7) & (yhat=2) & (step<decision_7_2) -> (step'=step+1);
  [update_1] (xhat=7) & (yhat=2) & (step>=decision_7_2) -> (step'=1);
  [skip_update] (xhat=7) & (yhat=3) & (step<decision_7_3) -> (step'=step+1);
  [update_1] (xhat=7) & (yhat=3) & (step>=decision_7_3) -> (step'=1);
  [skip_update] (xhat=7) & (yhat=4) & (step<decision_7_4) -> (step'=step+1);
  [update_1] (xhat=7) & (yhat=4) & (step>=decision_7_4) -> (step'=1);
  [skip_update] (xhat=7) & (yhat=5) & (step<decision_7_5) -> (step'=step+1);
  [update_1] (xhat=7) & (yhat=5) & (step>=decision_7_5) -> (step'=1);
  [skip_update] (xhat=7) & (yhat=6) & (step<decision_7_6) -> (step'=step+1);
  [update_1] (xhat=7) & (yhat=6) & (step>=decision_7_6) -> (step'=1);
  [skip_update] (xhat=7) & (yhat=7) & (step<decision_7_7) -> (step'=step+1);
  [update_1] (xhat=7) & (yhat=7) & (step>=decision_7_7) -> (step'=1);
  [skip_update] (xhat=7) & (yhat=8) & (step<decision_7_8) -> (step'=step+1);
  [update_1] (xhat=7) & (yhat=8) & (step>=decision_7_8) -> (step'=1);
  [skip_update] (xhat=7) & (yhat=9) & (step<decision_7_9) -> (step'=step+1);
  [update_1] (xhat=7) & (yhat=9) & (step>=decision_7_9) -> (step'=1);
  [skip_update] (xhat=8) & (yhat=0) & (step<decision_8_0) -> (step'=step+1);
  [update_1] (xhat=8) & (yhat=0) & (step>=decision_8_0) -> (step'=1);
  [skip_update] (xhat=8) & (yhat=1) & (step<decision_8_1) -> (step'=step+1);
  [update_1] (xhat=8) & (yhat=1) & (step>=decision_8_1) -> (step'=1);
  [skip_update] (xhat=8) & (yhat=2) & (step<decision_8_2) -> (step'=step+1);
  [update_1] (xhat=8) & (yhat=2) & (step>=decision_8_2) -> (step'=1);
  [skip_update] (xhat=8) & (yhat=3) & (step<decision_8_3) -> (step'=step+1);
  [update_1] (xhat=8) & (yhat=3) & (step>=decision_8_3) -> (step'=1);
  [skip_update] (xhat=8) & (yhat=4) & (step<decision_8_4) -> (step'=step+1);
  [update_1] (xhat=8) & (yhat=4) & (step>=decision_8_4) -> (step'=1);
  [skip_update] (xhat=8) & (yhat=5) & (step<decision_8_5) -> (step'=step+1);
  [update_1] (xhat=8) & (yhat=5) & (step>=decision_8_5) -> (step'=1);
  [skip_update] (xhat=8) & (yhat=6) & (step<decision_8_6) -> (step'=step+1);
  [update_1] (xhat=8) & (yhat=6) & (step>=decision_8_6) -> (step'=1);
  [skip_update] (xhat=8) & (yhat=7) & (step<decision_8_7) -> (step'=step+1);
  [update_1] (xhat=8) & (yhat=7) & (step>=decision_8_7) -> (step'=1);
  [skip_update] (xhat=8) & (yhat=8) & (step<decision_8_8) -> (step'=step+1);
  [update_1] (xhat=8) & (yhat=8) & (step>=decision_8_8) -> (step'=1);
  [skip_update] (xhat=8) & (yhat=9) & (step<decision_8_9) -> (step'=step+1);
  [update_1] (xhat=8) & (yhat=9) & (step>=decision_8_9) -> (step'=1);
  [skip_update] (xhat=9) & (yhat=0) & (step<decision_9_0) -> (step'=step+1);
  [update_1] (xhat=9) & (yhat=0) & (step>=decision_9_0) -> (step'=1);
  [skip_update] (xhat=9) & (yhat=1) & (step<decision_9_1) -> (step'=step+1);
  [update_1] (xhat=9) & (yhat=1) & (step>=decision_9_1) -> (step'=1);
  [skip_update] (xhat=9) & (yhat=2) & (step<decision_9_2) -> (step'=step+1);
  [update_1] (xhat=9) & (yhat=2) & (step>=decision_9_2) -> (step'=1);
  [skip_update] (xhat=9) & (yhat=3) & (step<decision_9_3) -> (step'=step+1);
  [update_1] (xhat=9) & (yhat=3) & (step>=decision_9_3) -> (step'=1);
  [skip_update] (xhat=9) & (yhat=4) & (step<decision_9_4) -> (step'=step+1);
  [update_1] (xhat=9) & (yhat=4) & (step>=decision_9_4) -> (step'=1);
  [skip_update] (xhat=9) & (yhat=5) & (step<decision_9_5) -> (step'=step+1);
  [update_1] (xhat=9) & (yhat=5) & (step>=decision_9_5) -> (step'=1);
  [skip_update] (xhat=9) & (yhat=6) & (step<decision_9_6) -> (step'=step+1);
  [update_1] (xhat=9) & (yhat=6) & (step>=decision_9_6) -> (step'=1);
  [skip_update] (xhat=9) & (yhat=7) & (step<decision_9_7) -> (step'=step+1);
  [update_1] (xhat=9) & (yhat=7) & (step>=decision_9_7) -> (step'=1);
  [skip_update] (xhat=9) & (yhat=8) & (step<decision_9_8) -> (step'=step+1);
  [update_1] (xhat=9) & (yhat=8) & (step>=decision_9_8) -> (step'=1);
  [skip_update] (xhat=9) & (yhat=9) & (step<decision_9_9) -> (step'=step+1);
  [update_1] (xhat=9) & (yhat=9) & (step>=decision_9_9) -> (step'=1);
endmodule

module Turn
  t : [0..2] init 0;
  [west] t=0 -> (t'=1);
  [east] t=0 -> (t'=1);
  [south] t=0 -> (t'=1);
  [north] t=0 -> (t'=1);
  [check] t=1 -> (t'=2);

  [skip_update] t=2 -> (t'=0);
  [update_1] t=2 -> (t'=0);

endmodule

rewards "cost" 
  [east] true : 1; 
  [west] true : 1; 
  [north] true : 1; 
  [south] true : 1; 
  [update_1] true : 5;
endrewards 

